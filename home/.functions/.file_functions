# Create a newly stubbed bash script file
function newsh {
  local SH_FILE="new.sh"
  echo "file: $1"
  if [ "" != "$1" ]; then
    SH_FILE="$1"
  fi
  echo "#!/usr/bin/env bash" > "$SH_FILE"
  echo "#" >> "$SH_FILE"
  echo "# Created By: $(whoami)" >> "$SH_FILE"
  echo "# Created Date: $(date +%Y%m%d-%H%M%S)" >> "$SH_FILE"
  echo "#" >> "$SH_FILE"
  echo "# Purpose and References:" >> "$SH_FILE"
  echo "#" >> "$SH_FILE"
  echo "#" >> "$SH_FILE"
  echo "# Where you want the options to take effect, use set -o option-name or, in short form, set -option-abbrev, To disable an option within a script, use set +o option-name or set +option-abbrev: https://www.tldp.org/LDP/abs/html/options.html" >> "$SH_FILE"
  echo "set +x #xtrace" >> "$SH_FILE"
  echo "set +v #verbose" >> "$SH_FILE"
  echo "set -e #errexit" >> "$SH_FILE"
  echo "set -u #nounset" >> "$SH_FILE"
  echo " " >> "$SH_FILE"
  chmod 740 "$SH_FILE"
}

# Used to pipe the man commands text into a pdf for easier viewing.
function manpdf() {
 man -t "${1}" | open -f -a /Applications/Preview.app/
}

# Function to quickly make a note file and open it up in the current directory.
function mknote {
  local NOTE_FILE="$(date '+%Y%m%d')-notes.txt"
  touch "$NOTE_FILE"
  open "$NOTE_FILE"
}
